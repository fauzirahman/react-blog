{"ast":null,"code":"\"use strict\";\n/**\n * @module compiler/sanitizer\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Executor is meant to execute the compiled functions with runtime\n * data.\n */\n\nclass Executor {\n  constructor(fns) {\n    this.fns = fns;\n  }\n  /**\n   * Executes the compiled functions in sequence.\n   */\n\n\n  exec(data, config) {\n    /**\n     * Creating a root data node. The `tip` and `pointer` will be copied\n     * and mutated down the road\n     */\n    const root = {\n      tip: data,\n      original: data\n    };\n    this.fns.forEach(fn => fn.exec(root, config));\n    return data;\n  }\n\n}\n\nexports.Executor = Executor;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-compiler/build/src/Sanitizer/Executor.js"],"names":["Object","defineProperty","exports","value","Executor","constructor","fns","exec","data","config","root","tip","original","forEach","fn"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;AAIA,MAAMC,QAAN,CAAe;AACXC,EAAAA,WAAW,CAACC,GAAD,EAAM;AACb,SAAKA,GAAL,GAAWA,GAAX;AACH;AACD;;;;;AAGAC,EAAAA,IAAI,CAACC,IAAD,EAAOC,MAAP,EAAe;AACf;;;;AAIA,UAAMC,IAAI,GAAG;AAAEC,MAAAA,GAAG,EAAEH,IAAP;AAAaI,MAAAA,QAAQ,EAAEJ;AAAvB,KAAb;AACA,SAAKF,GAAL,CAASO,OAAT,CAAkBC,EAAD,IAAQA,EAAE,CAACP,IAAH,CAAQG,IAAR,EAAcD,MAAd,CAAzB;AACA,WAAOD,IAAP;AACH;;AAfU;;AAiBfN,OAAO,CAACE,QAAR,GAAmBA,QAAnB","sourcesContent":["\"use strict\";\n/**\n * @module compiler/sanitizer\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Executor is meant to execute the compiled functions with runtime\n * data.\n */\nclass Executor {\n    constructor(fns) {\n        this.fns = fns;\n    }\n    /**\n     * Executes the compiled functions in sequence.\n     */\n    exec(data, config) {\n        /**\n         * Creating a root data node. The `tip` and `pointer` will be copied\n         * and mutated down the road\n         */\n        const root = { tip: data, original: data };\n        this.fns.forEach((fn) => fn.exec(root, config));\n        return data;\n    }\n}\nexports.Executor = Executor;\n"]},"metadata":{},"sourceType":"script"}