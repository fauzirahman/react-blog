{"ast":null,"code":"\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getTupleType_1 = require(\"../utils/getTupleType\");\n/**\n * Create an array with fixed number of children\n */\n\n\nfunction tuple() {\n  for (var _len = arguments.length, rules = new Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n\n  return {\n    members: function members() {\n      for (var _len2 = arguments.length, schema = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        schema[_key2] = arguments[_key2];\n      }\n\n      return getTupleType_1.getTupleType(schema, false, rules);\n    }\n  };\n}\n\nexports.tuple = tuple;\n/**\n * Create an optional array with fixed number of children\n */\n\ntuple.optional = function () {\n  for (var _len3 = arguments.length, rules = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    rules[_key3] = arguments[_key3];\n  }\n\n  return {\n    members: function members() {\n      for (var _len4 = arguments.length, schema = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        schema[_key4] = arguments[_key4];\n      }\n\n      return getTupleType_1.getTupleType(schema, true, rules);\n    }\n  };\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-parser/build/src/Types/tuple.js"],"names":["Object","defineProperty","exports","value","getTupleType_1","require","tuple","rules","members","schema","getTupleType","optional"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,cAAc,GAAGC,OAAO,CAAC,uBAAD,CAA9B;AACA;;;;;AAGA,SAASC,KAAT,GAAyB;AAAA,oCAAPC,KAAO;AAAPA,IAAAA,KAAO;AAAA;;AACrB,SAAO;AACHC,IAAAA,OADG,qBACgB;AAAA,yCAARC,MAAQ;AAARA,QAAAA,MAAQ;AAAA;;AACf,aAAOL,cAAc,CAACM,YAAf,CAA4BD,MAA5B,EAAoC,KAApC,EAA2CF,KAA3C,CAAP;AACH;AAHE,GAAP;AAKH;;AACDL,OAAO,CAACI,KAAR,GAAgBA,KAAhB;AACA;;;;AAGAA,KAAK,CAACK,QAAN,GAAiB,YAAc;AAAA,qCAAVJ,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AAC3B,SAAO;AACHC,IAAAA,OADG,qBACgB;AAAA,yCAARC,MAAQ;AAARA,QAAAA,MAAQ;AAAA;;AACf,aAAOL,cAAc,CAACM,YAAf,CAA4BD,MAA5B,EAAoC,IAApC,EAA0CF,KAA1C,CAAP;AACH;AAHE,GAAP;AAKH,CAND","sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getTupleType_1 = require(\"../utils/getTupleType\");\n/**\n * Create an array with fixed number of children\n */\nfunction tuple(...rules) {\n    return {\n        members(...schema) {\n            return getTupleType_1.getTupleType(schema, false, rules);\n        },\n    };\n}\nexports.tuple = tuple;\n/**\n * Create an optional array with fixed number of children\n */\ntuple.optional = (...rules) => {\n    return {\n        members(...schema) {\n            return getTupleType_1.getTupleType(schema, true, rules);\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"script"}