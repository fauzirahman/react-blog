{"ast":null,"code":"\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst date_fns_1 = require(\"date-fns\");\n/**\n * Month related functions\n */\n\n\nconst months = {\n  years: unit => unit * 12,\n  quarters: unit => unit * 3,\n  months: unit => unit\n};\n/**\n * Days related functions\n */\n\nconst days = {\n  weeks: unit => unit * 7,\n  days: unit => unit\n};\n/**\n * Milliseconds related functions\n */\n\nconst milliseconds = {\n  hours: unit => unit * 3600000,\n  minutes: unit => unit * 60000,\n  seconds: unit => unit * 1000,\n  milliseconds: unit => unit\n};\n/**\n * The job of this method is to ensure that we pull less dependencies from\n * date-fns.\n */\n\nexports.calcUnits = (diffUnit, key, operator) => {\n  if (months[key]) {\n    return date_fns_1.addMonths(new Date(), operator === '-' ? -months[key](diffUnit) : months[key](diffUnit));\n  }\n\n  if (days[key]) {\n    return date_fns_1.addDays(new Date(), operator === '-' ? -days[key](diffUnit) : days[key](diffUnit));\n  }\n\n  if (milliseconds[key]) {\n    return date_fns_1.addMilliseconds(new Date(), operator === '-' ? -milliseconds[key](diffUnit) : milliseconds[key](diffUnit));\n  }\n\n  throw new Error(`Invalid time calculation key ${key}`);\n};\n/**\n * An array of keys allowed for comparing date offset\n */\n\n\nexports.dateOffsetKeys = ['years', 'quarters', 'months', 'weeks', 'days', 'hours', 'minutes', 'seconds', 'milliseconds'];","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-rules/build/src/utils.js"],"names":["Object","defineProperty","exports","value","date_fns_1","require","months","years","unit","quarters","days","weeks","milliseconds","hours","minutes","seconds","calcUnits","diffUnit","key","operator","addMonths","Date","addDays","addMilliseconds","Error","dateOffsetKeys"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,UAAU,GAAGC,OAAO,CAAC,UAAD,CAA1B;AACA;;;;;AAGA,MAAMC,MAAM,GAAG;AACXC,EAAAA,KAAK,EAAGC,IAAD,IAAUA,IAAI,GAAG,EADb;AAEXC,EAAAA,QAAQ,EAAGD,IAAD,IAAUA,IAAI,GAAG,CAFhB;AAGXF,EAAAA,MAAM,EAAGE,IAAD,IAAUA;AAHP,CAAf;AAKA;;;;AAGA,MAAME,IAAI,GAAG;AACTC,EAAAA,KAAK,EAAGH,IAAD,IAAUA,IAAI,GAAG,CADf;AAETE,EAAAA,IAAI,EAAGF,IAAD,IAAUA;AAFP,CAAb;AAIA;;;;AAGA,MAAMI,YAAY,GAAG;AACjBC,EAAAA,KAAK,EAAGL,IAAD,IAAUA,IAAI,GAAG,OADP;AAEjBM,EAAAA,OAAO,EAAGN,IAAD,IAAUA,IAAI,GAAG,KAFT;AAGjBO,EAAAA,OAAO,EAAGP,IAAD,IAAUA,IAAI,GAAG,IAHT;AAIjBI,EAAAA,YAAY,EAAGJ,IAAD,IAAUA;AAJP,CAArB;AAMA;;;;;AAIAN,OAAO,CAACc,SAAR,GAAoB,CAACC,QAAD,EAAWC,GAAX,EAAgBC,QAAhB,KAA6B;AAC7C,MAAIb,MAAM,CAACY,GAAD,CAAV,EAAiB;AACb,WAAOd,UAAU,CAACgB,SAAX,CAAqB,IAAIC,IAAJ,EAArB,EAAiCF,QAAQ,KAAK,GAAb,GAAmB,CAACb,MAAM,CAACY,GAAD,CAAN,CAAYD,QAAZ,CAApB,GAA4CX,MAAM,CAACY,GAAD,CAAN,CAAYD,QAAZ,CAA7E,CAAP;AACH;;AACD,MAAIP,IAAI,CAACQ,GAAD,CAAR,EAAe;AACX,WAAOd,UAAU,CAACkB,OAAX,CAAmB,IAAID,IAAJ,EAAnB,EAA+BF,QAAQ,KAAK,GAAb,GAAmB,CAACT,IAAI,CAACQ,GAAD,CAAJ,CAAUD,QAAV,CAApB,GAA0CP,IAAI,CAACQ,GAAD,CAAJ,CAAUD,QAAV,CAAzE,CAAP;AACH;;AACD,MAAIL,YAAY,CAACM,GAAD,CAAhB,EAAuB;AACnB,WAAOd,UAAU,CAACmB,eAAX,CAA2B,IAAIF,IAAJ,EAA3B,EAAuCF,QAAQ,KAAK,GAAb,GAAmB,CAACP,YAAY,CAACM,GAAD,CAAZ,CAAkBD,QAAlB,CAApB,GAAkDL,YAAY,CAACM,GAAD,CAAZ,CAAkBD,QAAlB,CAAzF,CAAP;AACH;;AACD,QAAM,IAAIO,KAAJ,CAAW,gCAA+BN,GAAI,EAA9C,CAAN;AACH,CAXD;AAYA;;;;;AAGAhB,OAAO,CAACuB,cAAR,GAAyB,CACrB,OADqB,EAErB,UAFqB,EAGrB,QAHqB,EAIrB,OAJqB,EAKrB,MALqB,EAMrB,OANqB,EAOrB,SAPqB,EAQrB,SARqB,EASrB,cATqB,CAAzB","sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst date_fns_1 = require(\"date-fns\");\n/**\n * Month related functions\n */\nconst months = {\n    years: (unit) => unit * 12,\n    quarters: (unit) => unit * 3,\n    months: (unit) => unit,\n};\n/**\n * Days related functions\n */\nconst days = {\n    weeks: (unit) => unit * 7,\n    days: (unit) => unit,\n};\n/**\n * Milliseconds related functions\n */\nconst milliseconds = {\n    hours: (unit) => unit * 3600000,\n    minutes: (unit) => unit * 60000,\n    seconds: (unit) => unit * 1000,\n    milliseconds: (unit) => unit,\n};\n/**\n * The job of this method is to ensure that we pull less dependencies from\n * date-fns.\n */\nexports.calcUnits = (diffUnit, key, operator) => {\n    if (months[key]) {\n        return date_fns_1.addMonths(new Date(), operator === '-' ? -months[key](diffUnit) : months[key](diffUnit));\n    }\n    if (days[key]) {\n        return date_fns_1.addDays(new Date(), operator === '-' ? -days[key](diffUnit) : days[key](diffUnit));\n    }\n    if (milliseconds[key]) {\n        return date_fns_1.addMilliseconds(new Date(), operator === '-' ? -milliseconds[key](diffUnit) : milliseconds[key](diffUnit));\n    }\n    throw new Error(`Invalid time calculation key ${key}`);\n};\n/**\n * An array of keys allowed for comparing date offset\n */\nexports.dateOffsetKeys = [\n    'years',\n    'quarters',\n    'months',\n    'weeks',\n    'days',\n    'hours',\n    'minutes',\n    'seconds',\n    'milliseconds',\n];\n"]},"metadata":{},"sourceType":"script"}