{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst indicative_rules_1 = require(\"indicative-rules\");\n\nconst sanitizations_1 = require(\"./sanitizations\");\n/**\n * Extend validator by adding new rules\n */\n\n\nfunction extend(name, definition) {\n  indicative_rules_1.sanitizations[name] = definition;\n  /**\n   * Also adding it to the sanitizations list used to define\n   * schema rules\n   */\n\n  sanitizations_1.sanitizations[name] = function rule(args) {\n    return {\n      name,\n      args: args || []\n    };\n  };\n}\n\nexports.extend = extend;","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative/src/Sanitizer/extend.js"],"names":["Object","defineProperty","exports","value","indicative_rules_1","require","sanitizations_1","extend","name","definition","sanitizations","rule","args"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;;AACA,MAAMC,eAAe,GAAGD,OAAO,CAAC,iBAAD,CAA/B;AACA;;;;;AAGA,SAASE,MAAT,CAAgBC,IAAhB,EAAsBC,UAAtB,EAAkC;AAC9BL,EAAAA,kBAAkB,CAACM,aAAnB,CAAiCF,IAAjC,IAAyCC,UAAzC;AACA;;;;;AAIAH,EAAAA,eAAe,CAACI,aAAhB,CAA8BF,IAA9B,IAAsC,SAASG,IAAT,CAAcC,IAAd,EAAoB;AACtD,WAAO;AAAEJ,MAAAA,IAAF;AAAQI,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAAtB,KAAP;AACH,GAFD;AAGH;;AACDV,OAAO,CAACK,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\n/**\n * @module indicative\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_rules_1 = require(\"indicative-rules\");\nconst sanitizations_1 = require(\"./sanitizations\");\n/**\n * Extend validator by adding new rules\n */\nfunction extend(name, definition) {\n    indicative_rules_1.sanitizations[name] = definition;\n    /**\n     * Also adding it to the sanitizations list used to define\n     * schema rules\n     */\n    sanitizations_1.sanitizations[name] = function rule(args) {\n        return { name, args: args || [] };\n    };\n}\nexports.extend = extend;\n"]},"metadata":{},"sourceType":"script"}