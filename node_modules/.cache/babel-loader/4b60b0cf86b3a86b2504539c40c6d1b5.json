{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/**\n * Collection of sanitizations, that can be used to\n * define sanitization rules.\n */\n\nexports.sanitizations = {\n  escape: function escape() {\n    return {\n      name: 'escape',\n      args: []\n    };\n  },\n  lowerCase: function lowerCase(args) {\n    return {\n      name: 'lowerCase',\n      args: args || []\n    };\n  },\n  normalizeEmail: function normalizeEmail(args) {\n    return {\n      name: 'normalizeEmail',\n      args: args || []\n    };\n  },\n  plural: function plural() {\n    return {\n      name: 'plural',\n      args: []\n    };\n  },\n  singular: function singular() {\n    return {\n      name: 'singular',\n      args: []\n    };\n  },\n  slug: function slug() {\n    return {\n      name: 'slug',\n      args: []\n    };\n  },\n  stripLinks: function stripLinks() {\n    return {\n      name: 'stripLinks',\n      args: []\n    };\n  },\n  stripTags: function stripTags(args) {\n    return {\n      name: 'stripTags',\n      args: args || []\n    };\n  },\n  trim: function trim() {\n    return {\n      name: 'trim',\n      args: []\n    };\n  },\n  upperCase: function upperCase(args) {\n    return {\n      name: 'upperCase',\n      args: args || []\n    };\n  }\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative/src/Sanitizer/sanitizations.js"],"names":["Object","defineProperty","exports","value","sanitizations","escape","name","args","lowerCase","normalizeEmail","plural","singular","slug","stripLinks","stripTags","trim","upperCase"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;AAIAD,OAAO,CAACE,aAAR,GAAwB;AACpBC,EAAAA,MADoB,oBACX;AACL,WAAO;AAAEC,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAP;AACH,GAHmB;AAIpBC,EAAAA,SAJoB,qBAIVD,IAJU,EAIJ;AACZ,WAAO;AAAED,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAAnC,KAAP;AACH,GANmB;AAOpBE,EAAAA,cAPoB,0BAOLF,IAPK,EAOC;AACjB,WAAO;AAAED,MAAAA,IAAI,EAAE,gBAAR;AAA0BC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAAxC,KAAP;AACH,GATmB;AAUpBG,EAAAA,MAVoB,oBAUX;AACL,WAAO;AAAEJ,MAAAA,IAAI,EAAE,QAAR;AAAkBC,MAAAA,IAAI,EAAE;AAAxB,KAAP;AACH,GAZmB;AAapBI,EAAAA,QAboB,sBAaT;AACP,WAAO;AAAEL,MAAAA,IAAI,EAAE,UAAR;AAAoBC,MAAAA,IAAI,EAAE;AAA1B,KAAP;AACH,GAfmB;AAgBpBK,EAAAA,IAhBoB,kBAgBb;AACH,WAAO;AAAEN,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KAAP;AACH,GAlBmB;AAmBpBM,EAAAA,UAnBoB,wBAmBP;AACT,WAAO;AAAEP,MAAAA,IAAI,EAAE,YAAR;AAAsBC,MAAAA,IAAI,EAAE;AAA5B,KAAP;AACH,GArBmB;AAsBpBO,EAAAA,SAtBoB,qBAsBVP,IAtBU,EAsBJ;AACZ,WAAO;AAAED,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAAnC,KAAP;AACH,GAxBmB;AAyBpBQ,EAAAA,IAzBoB,kBAyBb;AACH,WAAO;AAAET,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,IAAI,EAAE;AAAtB,KAAP;AACH,GA3BmB;AA4BpBS,EAAAA,SA5BoB,qBA4BVT,IA5BU,EA4BJ;AACZ,WAAO;AAAED,MAAAA,IAAI,EAAE,WAAR;AAAqBC,MAAAA,IAAI,EAAEA,IAAI,IAAI;AAAnC,KAAP;AACH;AA9BmB,CAAxB","sourcesContent":["\"use strict\";\n/**\n * @module indicative\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Collection of sanitizations, that can be used to\n * define sanitization rules.\n */\nexports.sanitizations = {\n    escape() {\n        return { name: 'escape', args: [] };\n    },\n    lowerCase(args) {\n        return { name: 'lowerCase', args: args || [] };\n    },\n    normalizeEmail(args) {\n        return { name: 'normalizeEmail', args: args || [] };\n    },\n    plural() {\n        return { name: 'plural', args: [] };\n    },\n    singular() {\n        return { name: 'singular', args: [] };\n    },\n    slug() {\n        return { name: 'slug', args: [] };\n    },\n    stripLinks() {\n        return { name: 'stripLinks', args: [] };\n    },\n    stripTags(args) {\n        return { name: 'stripTags', args: args || [] };\n    },\n    trim() {\n        return { name: 'trim', args: [] };\n    },\n    upperCase(args) {\n        return { name: 'upperCase', args: args || [] };\n    },\n};\n"]},"metadata":{},"sourceType":"script"}