{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nvar before_1 = require(\"./before\");\n\nvar utils_1 = require(\"../utils\");\n/**\n * Returns a boolean telling if input date is before the given\n * offset or not.\n *\n * The `key` has to be one of the following values.\n *\n * - years\n * - quarters\n * - months\n * - weeks\n * - days\n * - hours\n * - minutes\n * - seconds\n * - milliseconds\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n * const inputDate = new Date().setDate(new Date().getDate() - 11)\n *\n * if (is.beforeOffsetOf(inputDate, 10, 'days')) {\n * }\n * ```\n */\n\n\nexports.beforeOffsetOf = function (input, diffUnit, key) {\n  var expectedDate = utils_1.calcUnits(diffUnit, key, '-');\n  return expectedDate ? before_1.before(input, expectedDate) : false;\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/raw/beforeOffsetOf.js"],"names":["Object","defineProperty","exports","value","before_1","require","utils_1","beforeOffsetOf","input","diffUnit","key","expectedDate","calcUnits","before"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA,IAAMC,QAAQ,GAAGC,OAAO,CAAC,UAAD,CAAxB;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyBAH,OAAO,CAACK,cAAR,GAAyB,UAACC,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,EAA0B;AAC/C,MAAMC,YAAY,GAAGL,OAAO,CAACM,SAAR,CAAkBH,QAAlB,EAA4BC,GAA5B,EAAiC,GAAjC,CAArB;AACA,SAAOC,YAAY,GAAGP,QAAQ,CAACS,MAAT,CAAgBL,KAAhB,EAAuBG,YAAvB,CAAH,GAA0C,KAA7D;AACH,CAHD","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst before_1 = require(\"./before\");\nconst utils_1 = require(\"../utils\");\n/**\n * Returns a boolean telling if input date is before the given\n * offset or not.\n *\n * The `key` has to be one of the following values.\n *\n * - years\n * - quarters\n * - months\n * - weeks\n * - days\n * - hours\n * - minutes\n * - seconds\n * - milliseconds\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n * const inputDate = new Date().setDate(new Date().getDate() - 11)\n *\n * if (is.beforeOffsetOf(inputDate, 10, 'days')) {\n * }\n * ```\n */\nexports.beforeOffsetOf = (input, diffUnit, key) => {\n    const expectedDate = utils_1.calcUnits(diffUnit, key, '-');\n    return expectedDate ? before_1.before(input, expectedDate) : false;\n};\n"]},"metadata":{},"sourceType":"script"}