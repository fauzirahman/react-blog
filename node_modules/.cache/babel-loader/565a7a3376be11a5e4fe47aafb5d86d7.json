{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\n/**\n * Returns a boolean telling if an array is sorted in ascending\n * order.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * is.sorted([1, 2, 3, 4, 5, 6]) // true\n * is.sorted([1, 2, 4, 3, 5, 6]) // false\n * ```\n */\n\nexports.sorted = input => {\n  if (!Array.isArray(input)) {\n    return false;\n  }\n\n  let scaledDown = false;\n  let i = 0;\n\n  while (i < input.length) {\n    const b = Number(input[i++]);\n    const a = Number(input[i - 2]);\n\n    if (a && a > b) {\n      scaledDown = true;\n      break;\n    }\n  }\n\n  return !scaledDown;\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-rules/build/src/raw/sorted.js"],"names":["Object","defineProperty","exports","value","sorted","input","Array","isArray","scaledDown","i","length","b","Number","a"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA;;;;;;;;;;;;;AAYAD,OAAO,CAACE,MAAR,GAAkBC,KAAD,IAAW;AACxB,MAAI,CAACC,KAAK,CAACC,OAAN,CAAcF,KAAd,CAAL,EAA2B;AACvB,WAAO,KAAP;AACH;;AACD,MAAIG,UAAU,GAAG,KAAjB;AACA,MAAIC,CAAC,GAAG,CAAR;;AACA,SAAOA,CAAC,GAAGJ,KAAK,CAACK,MAAjB,EAAyB;AACrB,UAAMC,CAAC,GAAGC,MAAM,CAACP,KAAK,CAACI,CAAC,EAAF,CAAN,CAAhB;AACA,UAAMI,CAAC,GAAGD,MAAM,CAACP,KAAK,CAACI,CAAC,GAAG,CAAL,CAAN,CAAhB;;AACA,QAAII,CAAC,IAAIA,CAAC,GAAGF,CAAb,EAAgB;AACZH,MAAAA,UAAU,GAAG,IAAb;AACA;AACH;AACJ;;AACD,SAAO,CAACA,UAAR;AACH,CAfD","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n/**\n * Returns a boolean telling if an array is sorted in ascending\n * order.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * is.sorted([1, 2, 3, 4, 5, 6]) // true\n * is.sorted([1, 2, 4, 3, 5, 6]) // false\n * ```\n */\nexports.sorted = (input) => {\n    if (!Array.isArray(input)) {\n        return false;\n    }\n    let scaledDown = false;\n    let i = 0;\n    while (i < input.length) {\n        const b = Number(input[i++]);\n        const a = Number(input[i - 2]);\n        if (a && a > b) {\n            scaledDown = true;\n            break;\n        }\n    }\n    return !scaledDown;\n};\n"]},"metadata":{},"sourceType":"script"}