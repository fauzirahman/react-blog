{"ast":null,"code":"\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst indicative_utils_1 = require(\"indicative-utils\");\n\nconst MISSING_VALUE = 'includes:make sure to define substring to match';\n/**\n * Enforces the field value to include a given substring.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   url: 'includes:adonisjs.com'\n * }\n *\n * // or\n * const rules = {\n *   url: [\n *     validations.includes(['adonisjs.com'])\n *   ]\n * }\n * ```\n */\n\nconst validation = {\n  async: false,\n\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    return [String(args[0])];\n  },\n\n  validate: (data, field, [substring], config) => {\n    const fieldValue = indicative_utils_1.getValue(data, field);\n\n    if (indicative_utils_1.skippable(fieldValue, field, config)) {\n      return true;\n    }\n\n    if (typeof fieldValue !== 'string') {\n      return false;\n    }\n\n    return fieldValue.includes(substring);\n  }\n};\nexports.default = validation;","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-rules/build/src/validations/string/includes.js"],"names":["Object","defineProperty","exports","value","indicative_utils_1","require","MISSING_VALUE","validation","async","compile","args","ensureLength","String","validate","data","field","substring","config","fieldValue","getValue","skippable","includes","default"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;;AACA,MAAMC,aAAa,GAAG,iDAAtB;AACA;;;;;;;;;;;;;;;;;;;AAkBA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,KADQ;;AAEfC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACVN,IAAAA,kBAAkB,CAACO,YAAnB,CAAgCD,IAAhC,EAAsCJ,aAAtC,EAAqD,CAArD;AACA,WAAO,CAACM,MAAM,CAACF,IAAI,CAAC,CAAD,CAAL,CAAP,CAAP;AACH,GALc;;AAMfG,EAAAA,QAAQ,EAAE,CAACC,IAAD,EAAOC,KAAP,EAAc,CAACC,SAAD,CAAd,EAA2BC,MAA3B,KAAsC;AAC5C,UAAMC,UAAU,GAAGd,kBAAkB,CAACe,QAAnB,CAA4BL,IAA5B,EAAkCC,KAAlC,CAAnB;;AACA,QAAIX,kBAAkB,CAACgB,SAAnB,CAA6BF,UAA7B,EAAyCH,KAAzC,EAAgDE,MAAhD,CAAJ,EAA6D;AACzD,aAAO,IAAP;AACH;;AACD,QAAI,OAAQC,UAAR,KAAwB,QAA5B,EAAsC;AAClC,aAAO,KAAP;AACH;;AACD,WAAOA,UAAU,CAACG,QAAX,CAAoBL,SAApB,CAAP;AACH;AAfc,CAAnB;AAiBAd,OAAO,CAACoB,OAAR,GAAkBf,UAAlB","sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst MISSING_VALUE = 'includes:make sure to define substring to match';\n/**\n * Enforces the field value to include a given substring.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   url: 'includes:adonisjs.com'\n * }\n *\n * // or\n * const rules = {\n *   url: [\n *     validations.includes(['adonisjs.com'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        return [String(args[0])];\n    },\n    validate: (data, field, [substring], config) => {\n        const fieldValue = indicative_utils_1.getValue(data, field);\n        if (indicative_utils_1.skippable(fieldValue, field, config)) {\n            return true;\n        }\n        if (typeof (fieldValue) !== 'string') {\n            return false;\n        }\n        return fieldValue.includes(substring);\n    },\n};\nexports.default = validation;\n"]},"metadata":{},"sourceType":"script"}