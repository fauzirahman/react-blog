{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst indicative_utils_1 = require(\"indicative-utils\");\n/**\n * Converts the field value to upper case. Also, this sanitization rule\n * is locale aware.\n *\n * ```ts\n * import { sanitizations } from 'indicative/sanitizer'\n *\n * const sanitizationRules = {\n *   hexCode: 'upper_case'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   hexCode: [\n *     sanitizations.upperCase()\n *   ]\n * }\n * ```\n *\n * You may also specify a locale.\n *\n * ```js\n * const sanitizationRules = {\n *   label: 'upper_case:fr-CA'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   label: [\n *     sanitizations.upperCase(['fr-CA'])\n *   ]\n * }\n */\n\n\nconst upperCase = {\n  sanitize(data, field, args = []) {\n    let fieldValue = indicative_utils_1.getValue(data, field);\n\n    if (typeof fieldValue !== 'string') {\n      return;\n    }\n\n    indicative_utils_1.patchValue(data, field, fieldValue.toLocaleUpperCase(args[0]));\n  }\n\n};\nexports.default = upperCase;","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-rules/build/src/sanitizations/upperCase.js"],"names":["Object","defineProperty","exports","value","indicative_utils_1","require","upperCase","sanitize","data","field","args","fieldValue","getValue","patchValue","toLocaleUpperCase","default"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiCA,MAAMC,SAAS,GAAG;AACdC,EAAAA,QAAQ,CAACC,IAAD,EAAOC,KAAP,EAAcC,IAAI,GAAG,EAArB,EAAyB;AAC7B,QAAIC,UAAU,GAAGP,kBAAkB,CAACQ,QAAnB,CAA4BJ,IAA5B,EAAkCC,KAAlC,CAAjB;;AACA,QAAI,OAAQE,UAAR,KAAwB,QAA5B,EAAsC;AAClC;AACH;;AACDP,IAAAA,kBAAkB,CAACS,UAAnB,CAA8BL,IAA9B,EAAoCC,KAApC,EAA2CE,UAAU,CAACG,iBAAX,CAA6BJ,IAAI,CAAC,CAAD,CAAjC,CAA3C;AACH;;AAPa,CAAlB;AASAR,OAAO,CAACa,OAAR,GAAkBT,SAAlB","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\n/**\n * Converts the field value to upper case. Also, this sanitization rule\n * is locale aware.\n *\n * ```ts\n * import { sanitizations } from 'indicative/sanitizer'\n *\n * const sanitizationRules = {\n *   hexCode: 'upper_case'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   hexCode: [\n *     sanitizations.upperCase()\n *   ]\n * }\n * ```\n *\n * You may also specify a locale.\n *\n * ```js\n * const sanitizationRules = {\n *   label: 'upper_case:fr-CA'\n * }\n *\n * // or\n * const sanitizationRules = {\n *   label: [\n *     sanitizations.upperCase(['fr-CA'])\n *   ]\n * }\n */\nconst upperCase = {\n    sanitize(data, field, args = []) {\n        let fieldValue = indicative_utils_1.getValue(data, field);\n        if (typeof (fieldValue) !== 'string') {\n            return;\n        }\n        indicative_utils_1.patchValue(data, field, fieldValue.toLocaleUpperCase(args[0]));\n    },\n};\nexports.default = upperCase;\n"]},"metadata":{},"sourceType":"script"}