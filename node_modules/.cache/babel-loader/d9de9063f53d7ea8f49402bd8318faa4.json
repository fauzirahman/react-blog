{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react-blog/src/components/Admin/Article/index.jsx\";\n\n/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport CreateArticle from './CreateArticle';\n\nclass Article extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = async event => {\n      this.setState({\n        [event.target.name]: event.target.type === 'file' ? event.target.files[0] : event.target.value\n      });\n    };\n\n    this.handleSubmitChange = async event => {\n      event.preventDefault();\n      console.log(this.state); //validating user data        \n\n      const data = this.state;\n      const rules = {\n        title: 'required|string',\n        image: 'required',\n        content: 'required|string',\n        category: 'required|string'\n      };\n      const message = {\n        required: 'This field is required.'\n      };\n      validateAll(data, rules, message).then(() => {\n        Axios.post(`${config.apiUrl}/api/articles/create`, {\n          title: this.state.title,\n          imageUrl: 'http://localhost:3000/assets/img/bg-login-image.jpg',\n          category_id: this.state.category,\n          content: this.state.content\n        }).then(response => {\n          console.log(response.data);\n          localStorage.setItem('article', JSON.stringify(response.data));\n          this.props.history.push('/');\n        }).catch(errors => {\n          console.log(errors);\n          var Jsonemail = JSON.parse(errors.response.data);\n          const formattedErrors = {}; //formattedErrors['email'] = Jsonemail['email'];\n\n          this.setState({\n            errors\n          });\n        });\n      }).catch(errors => {\n        console.log(errors);\n        const formattedErrors = {};\n        errors.forEach(error => formattedErrors[error.field] = error.message);\n        this.setState({\n          errors: formattedErrors\n        });\n      });\n    };\n\n    this.state = {\n      title: '',\n      image: null,\n      content: '',\n      category: null,\n      errors: {},\n      categories: []\n    };\n  }\n\n  async componentWillMount() {\n    const categories = await this.props.getArticleCategories();\n    this.setState({\n      categories\n    });\n  }\n\n  render() {\n    return React.createElement(CreateArticle, {\n      categories: this.state.categories,\n      handleInputChange: this.handleInputChange,\n      handleSubmitChange: this.handleSubmitChange,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/src/components/Admin/Article/index.jsx"],"names":["React","Axios","validateAll","config","CreateArticle","Article","Component","constructor","handleInputChange","event","setState","target","name","type","files","value","handleSubmitChange","preventDefault","console","log","state","data","rules","title","image","content","category","message","required","then","post","apiUrl","imageUrl","category_id","response","localStorage","setItem","JSON","stringify","props","history","push","catch","errors","Jsonemail","parse","formattedErrors","forEach","error","field","categories","componentWillMount","getArticleCategories","render"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport CreateArticle from './CreateArticle';\n\n\nclass Article extends React.Component {\n    constructor() {\n        super();\n\n\n        this.state = {\n            title: '',\n            image: null,\n            content: '',\n            category: null ,\n            errors: {},\n            categories: []\n        };\n\n    }\n\n    async componentWillMount(){\n        const categories = await this.props.getArticleCategories();\n\n        this.setState({\n            categories\n        })\n    }\n\n    handleInputChange = async (event) => {\n        \n        this.setState({\n            [event.target.name]: event.target.type === 'file' ?  event.target.files[0] : event.target.value\n        });\n    }\n\n    handleSubmitChange = async (event) => {\n        event.preventDefault()\n        console.log(this.state)\n\n        //validating user data        \n        const data = this.state;\n        const rules = {\n            title: 'required|string',\n            image: 'required',\n            content: 'required|string',\n            category: 'required|string'           \n        };\n        \n\n\n        const message = {\n            required: 'This field is required.'\n        };\n       \n        validateAll(data, rules, message)\n        .then(() => {\n            Axios.post(`${config.apiUrl}/api/articles/create`,{                \n                title: this.state.title,\n                imageUrl: 'http://localhost:3000/assets/img/bg-login-image.jpg',\n                category_id: this.state.category,\n                content: this.state.content\n            }).then(response => {\n                console.log(response.data)\n                localStorage.setItem('article', JSON.stringify(response.data))                \n                this.props.history.push('/');\n            }).catch(errors=>{\n                console.log(errors)\n                var Jsonemail = JSON.parse(errors.response.data)\n\n                const formattedErrors = {}\n                //formattedErrors['email'] = Jsonemail['email'];\n                this.setState({\n                    errors\n                })\n            })\n        })  \n        .catch(errors=>{\n            console.log(errors);\n            const formattedErrors = {}\n            errors.forEach(error => formattedErrors[error.field] = error.message)\n            this.setState({\n                errors: formattedErrors\n            })        \n        })      \n\n\n    }\n\n    render() {\n        return (\n            <CreateArticle categories={this.state.categories} handleInputChange={this.handleInputChange} handleSubmitChange={this.handleSubmitChange} errors={this.state.errors}/>\n        );\n    }\n}\nexport default Article;"]},"metadata":{},"sourceType":"module"}