{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nvar phoneRegex = /\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/;\n/**\n * Validates an input string against the phone number regex. Checkout\n * [libphonenumber](https://www.npmjs.com/package/libphonenumber-js)\n * If looking for a battle tested phone number validation with\n * country codes.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * is.phone('9999999999')    // true\n * is.phone('999-999-9999')  // true\n * is.phone('999.999.9999')  // true\n * ```\n */\n\nexports.phone = function (input) {\n  return phoneRegex.test(input);\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/raw/phone.js"],"names":["Object","defineProperty","exports","value","phoneRegex","phone","input","test"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA,IAAMC,UAAU,GAAG,+BAAnB;AACA;;;;;;;;;;;;;;;;AAeAF,OAAO,CAACG,KAAR,GAAgB,UAACC,KAAD;AAAA,SAAWF,UAAU,CAACG,IAAX,CAAgBD,KAAhB,CAAX;AAAA,CAAhB","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst phoneRegex = /\\b\\d{3}[-.]?\\d{3}[-.]?\\d{4}\\b/;\n/**\n * Validates an input string against the phone number regex. Checkout\n * [libphonenumber](https://www.npmjs.com/package/libphonenumber-js)\n * If looking for a battle tested phone number validation with\n * country codes.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * is.phone('9999999999')    // true\n * is.phone('999-999-9999')  // true\n * is.phone('999.999.9999')  // true\n * ```\n */\nexports.phone = (input) => phoneRegex.test(input);\n"]},"metadata":{},"sourceType":"script"}