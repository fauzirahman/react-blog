{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react-blog/src/components/Admin/Article/index.jsx\";\n\n/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport CreateArticle from './CreateArticle';\n\nclass Article extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = async event => {\n      this.setState({\n        [event.target.name]: event.target.type === 'file' ? event.target.files[0] : event.target.value\n      });\n    };\n\n    this.handleSubmitChange = async event => {\n      event.preventDefault();\n      console.log(this.state); //validating user data        \n\n      const data = this.state;\n      const rules = {\n        title: 'required|string',\n        content: 'required|string',\n        title: 'required|string',\n        title: 'required|string',\n        password: 'required|string|min:6|confirmed'\n      };\n      const message = {\n        required: 'This field is required.',\n        'required.email': 'The email is required.',\n        'password.confirmed': 'The password confirmation does not match.'\n      };\n      validateAll(data, rules, message).then(() => {\n        Axios.post(`${config.apiUrl}/api/register`, {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          password_confirmation: this.state.password_confirmation\n        }).then(response => {\n          console.log(response.data);\n          localStorage.setItem('user', JSON.stringify(response.data));\n          this.props.setAuthUser(response.data);\n          this.props.history.push('/');\n        }).catch(errors => {\n          console.log(errors);\n          var Jsonemail = JSON.parse(errors.response.data);\n          const formattedErrors = {};\n          formattedErrors['email'] = Jsonemail['email'];\n          this.setState({\n            errors: formattedErrors\n          });\n        });\n      }).catch(errors => {\n        const formattedErrors = {};\n        errors.forEach(error => formattedErrors[error.field] = error.message);\n        this.setState({\n          errors\n        });\n      });\n    };\n\n    this.state = {\n      title: '',\n      image: null,\n      content: '',\n      channel: null,\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(CreateArticle, {\n      handleInputChange: this.handleInputChange,\n      handleSubmitChange: this.handleSubmitChange,\n      errors: this.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    });\n  }\n\n}\n\nexport default Article;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/src/components/Admin/Article/index.jsx"],"names":["React","Axios","validateAll","config","CreateArticle","Article","Component","constructor","handleInputChange","event","setState","target","name","type","files","value","handleSubmitChange","preventDefault","console","log","state","data","rules","title","content","password","message","required","then","post","apiUrl","email","password_confirmation","response","localStorage","setItem","JSON","stringify","props","setAuthUser","history","push","catch","errors","Jsonemail","parse","formattedErrors","forEach","error","field","image","channel","render"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport CreateArticle from './CreateArticle';\n\n\nclass Article extends React.Component {\n    constructor() {\n        super();\n\n\n        this.state = {\n            title: '',\n            image: null,\n            content: '',\n            channel: null ,\n            errors: {}\n        };\n\n    }\n\n    handleInputChange = async (event) => {\n        \n        this.setState({\n            [event.target.name]: event.target.type === 'file' ?  event.target.files[0] : event.target.value\n        });\n    }\n\n    handleSubmitChange = async (event) => {\n        event.preventDefault()\n        console.log(this.state)\n\n        //validating user data        \n        const data = this.state;\n        const rules = {\n            title: 'required|string',\n            content: 'required|string',\n            title: 'required|string',\n            title: 'required|string',\n            password: 'required|string|min:6|confirmed'\n        };\n\n\n        const message = {\n            required: 'This field is required.',\n            'required.email': 'The email is required.',\n            'password.confirmed': 'The password confirmation does not match.'\n        };\n\n\n        validateAll(data, rules, message)\n            .then(() => {\n                Axios.post(`${config.apiUrl}/api/register`, {\n                    name: this.state.name,\n                    email: this.state.email,\n                    password: this.state.password,\n                    password_confirmation: this.state.password_confirmation\n                }).then(response => {\n                    console.log(response.data)\n                    localStorage.setItem('user', JSON.stringify(response.data))\n                    this.props.setAuthUser(response.data)\n                    this.props.history.push('/');\n                }).catch(errors => {\n                    console.log(errors)\n                    var Jsonemail = JSON.parse(errors.response.data)\n\n                    const formattedErrors = {}\n                    formattedErrors['email'] = Jsonemail['email'];\n                    this.setState({\n                        errors: formattedErrors\n                    })\n                })\n            })\n            .catch(errors => {\n                const formattedErrors = {}\n                errors.forEach(error => formattedErrors[error.field] = error.message)\n                this.setState({\n                    errors\n                })\n            })\n    }\n\n    render() {\n        return (\n            <CreateArticle handleInputChange={this.handleInputChange} handleSubmitChange={this.handleSubmitChange} errors={this.errors}/>\n        );\n    }\n}\nexport default Article;"]},"metadata":{},"sourceType":"module"}