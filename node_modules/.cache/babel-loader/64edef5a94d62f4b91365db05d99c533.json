{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nconst after_1 = require(\"./after\");\n\nconst utils_1 = require(\"../utils\");\n/**\n * Returns a boolean telling if input date is after the given\n * offset or not.\n *\n * The `key` has to be one of the following values.\n *\n * - years\n * - quarters\n * - months\n * - weeks\n * - days\n * - hours\n * - minutes\n * - seconds\n * - milliseconds\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.afterOffsetOf(new Date(), 10, 'days')) {\n * }\n * ```\n */\n\n\nexports.afterOffsetOf = (input, diffUnit, key) => {\n  const expectedDate = utils_1.calcUnits(diffUnit, key, '+');\n  return expectedDate ? after_1.after(input, expectedDate) : false;\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/raw/afterOffsetOf.js"],"names":["Object","defineProperty","exports","value","after_1","require","utils_1","afterOffsetOf","input","diffUnit","key","expectedDate","calcUnits","after"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA,MAAMC,OAAO,GAAGC,OAAO,CAAC,SAAD,CAAvB;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,UAAD,CAAvB;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;AAwBAH,OAAO,CAACK,aAAR,GAAwB,CAACC,KAAD,EAAQC,QAAR,EAAkBC,GAAlB,KAA0B;AAC9C,QAAMC,YAAY,GAAGL,OAAO,CAACM,SAAR,CAAkBH,QAAlB,EAA4BC,GAA5B,EAAiC,GAAjC,CAArB;AACA,SAAOC,YAAY,GAAGP,OAAO,CAACS,KAAR,CAAcL,KAAd,EAAqBG,YAArB,CAAH,GAAwC,KAA3D;AACH,CAHD","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst after_1 = require(\"./after\");\nconst utils_1 = require(\"../utils\");\n/**\n * Returns a boolean telling if input date is after the given\n * offset or not.\n *\n * The `key` has to be one of the following values.\n *\n * - years\n * - quarters\n * - months\n * - weeks\n * - days\n * - hours\n * - minutes\n * - seconds\n * - milliseconds\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.afterOffsetOf(new Date(), 10, 'days')) {\n * }\n * ```\n */\nexports.afterOffsetOf = (input, diffUnit, key) => {\n    const expectedDate = utils_1.calcUnits(diffUnit, key, '+');\n    return expectedDate ? after_1.after(input, expectedDate) : false;\n};\n"]},"metadata":{},"sourceType":"script"}