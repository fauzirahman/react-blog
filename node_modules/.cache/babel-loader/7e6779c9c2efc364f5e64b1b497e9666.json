{"ast":null,"code":"\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getLiteralType_1 = require(\"../utils/getLiteralType\");\n/**\n * Define a number\n */\n\n\nexports.number = function () {\n  for (var _len = arguments.length, rules = new Array(_len), _key = 0; _key < _len; _key++) {\n    rules[_key] = arguments[_key];\n  }\n\n  return getLiteralType_1.getLiteralType('number', rules || [], false);\n};\n/**\n * Define an optional number\n */\n\n\nexports.number.optional = function () {\n  for (var _len2 = arguments.length, rules = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    rules[_key2] = arguments[_key2];\n  }\n\n  return getLiteralType_1.getLiteralType('number', rules || [], true);\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-parser/build/src/Types/number.js"],"names":["Object","defineProperty","exports","value","getLiteralType_1","require","number","rules","getLiteralType","optional"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,gBAAgB,GAAGC,OAAO,CAAC,yBAAD,CAAhC;AACA;;;;;AAGAH,OAAO,CAACI,MAAR,GAAiB,YAAc;AAAA,oCAAVC,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AAC3B,SAAOH,gBAAgB,CAACI,cAAjB,CAAgC,QAAhC,EAA0CD,KAAK,IAAI,EAAnD,EAAuD,KAAvD,CAAP;AACH,CAFD;AAGA;;;;;AAGAL,OAAO,CAACI,MAAR,CAAeG,QAAf,GAA0B,YAAc;AAAA,qCAAVF,KAAU;AAAVA,IAAAA,KAAU;AAAA;;AACpC,SAAOH,gBAAgB,CAACI,cAAjB,CAAgC,QAAhC,EAA0CD,KAAK,IAAI,EAAnD,EAAuD,IAAvD,CAAP;AACH,CAFD","sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getLiteralType_1 = require(\"../utils/getLiteralType\");\n/**\n * Define a number\n */\nexports.number = (...rules) => {\n    return getLiteralType_1.getLiteralType('number', rules || [], false);\n};\n/**\n * Define an optional number\n */\nexports.number.optional = (...rules) => {\n    return getLiteralType_1.getLiteralType('number', rules || [], true);\n};\n"]},"metadata":{},"sourceType":"script"}