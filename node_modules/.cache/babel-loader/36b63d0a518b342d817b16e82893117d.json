{"ast":null,"code":"var _jsxFileName = \"/opt/lampp/htdocs/react-blog/src/components/Admin/Signup/index.jsx\";\n\n/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport PropTypes from 'prop-types';\nimport SignupForm from './SignupForm';\n\nclass Signup extends React.Component {\n  constructor() {\n    super();\n\n    this.handleInputChange = async event => {\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmitChange = async event => {\n      event.preventDefault();\n      console.log(this.state); //validating user data        \n\n      const data = this.state;\n      const rules = {\n        name: 'required|string',\n        email: 'required|email',\n        password: 'required|string|min:6|confirmed'\n      };\n      const message = {\n        required: 'This field is required.',\n        'required.email': 'The email is required.',\n        'password.confirmed': 'The password confirmation does not match.'\n      };\n      validateAll(data, rules, message).then(() => {\n        Axios.post(`${config.apiUrl}/api/register`, {\n          name: this.state.name,\n          email: this.state.email,\n          password: this.state.password,\n          password_confirmation: this.state.password_confirmation\n        }).then(response => {\n          console.log(response.data);\n          localStorage.setItem('user', JSON.stringify(response.data));\n          this.props.setAuthUser(response.data);\n          this.props.history.push('/');\n        }).catch(errors => {\n          console.log(errors);\n          var Jsonemail = JSON.parse(errors.response.data);\n          const formattedErrors = {}; //formattedErrors['email'] = Jsonemail['email'];\n\n          this.setState({\n            errors\n          });\n        });\n      }).catch(errors => {\n        const formattedErrors = {};\n        errors.forEach(error => formattedErrors[error.field] = error.message);\n        this.setState({\n          errors: formattedErrors\n        });\n      });\n    };\n\n    this.state = {\n      name: '',\n      email: '',\n      password: '',\n      password_confirmation: '',\n      errors: {}\n    };\n  }\n\n  render() {\n    return React.createElement(SignupForm, {\n      handleInputChange: this.handleInputChange,\n      handleSubmitChange: this.handleSubmitChange,\n      errors: this.state.errors,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    });\n  }\n\n}\n\nSignup.propTypes = {\n  handleInputChange: PropTypes.func.isRequired,\n  handleSubmitChange: PropTypes.func.isRequired,\n  errors: PropTypes.func.isRequired\n};\nexport default Signup;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/src/components/Admin/Signup/index.jsx"],"names":["React","Axios","validateAll","config","PropTypes","SignupForm","Signup","Component","constructor","handleInputChange","event","setState","target","name","value","handleSubmitChange","preventDefault","console","log","state","data","rules","email","password","message","required","then","post","apiUrl","password_confirmation","response","localStorage","setItem","JSON","stringify","props","setAuthUser","history","push","catch","errors","Jsonemail","parse","formattedErrors","forEach","error","field","render","propTypes","func","isRequired"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport Axios from 'axios';\nimport { validateAll } from 'indicative/validator';\nimport config from '../../../Config';\nimport PropTypes from 'prop-types';\nimport SignupForm from './SignupForm';\n\n\nclass Signup extends React.Component{\n    constructor(){\n        super();\n\n\n        this.state = {\n            name: '',\n            email: '',\n            password: '',\n            password_confirmation: '',\n            errors: {}\n        };\n\n    }\n\n    handleInputChange = async(event) => {\n        this.setState({\n            [event.target.name]: event.target.value\n        });\n    }\n\n    handleSubmitChange = async(event) => {\n        event.preventDefault()\n        console.log(this.state)\n\n        //validating user data        \n        const data = this.state;\n        const rules = {\n            name: 'required|string',\n            email: 'required|email',\n            password: 'required|string|min:6|confirmed'            \n        };\n\n\n        const message = {\n            required: 'This field is required.',\n            'required.email': 'The email is required.',\n            'password.confirmed': 'The password confirmation does not match.'\n        };\n\n             \n        validateAll(data, rules, message)\n        .then(() => {\n            Axios.post(`${config.apiUrl}/api/register`,{                \n                name: this.state.name,\n                email: this.state.email,\n                password: this.state.password,\n                password_confirmation: this.state.password_confirmation\n            }).then(response => {\n                console.log(response.data)\n                localStorage.setItem('user', JSON.stringify(response.data))\n                this.props.setAuthUser(response.data)\n                this.props.history.push('/');\n            }).catch(errors=>{\n                console.log(errors)\n                var Jsonemail = JSON.parse(errors.response.data)\n\n                const formattedErrors = {}\n                //formattedErrors['email'] = Jsonemail['email'];\n                this.setState({\n                    errors\n                })\n            })\n        })  \n        .catch(errors=>{\n            const formattedErrors = {}\n            errors.forEach(error => formattedErrors[error.field] = error.message)\n            this.setState({\n                errors: formattedErrors\n            })        \n        })      \n    }\n\n    render(){\n        return (\n            <SignupForm handleInputChange={this.handleInputChange} handleSubmitChange={this.handleSubmitChange} errors={this.state.errors} />\n        );\n    }\n}\n\nSignup.propTypes = {\n    handleInputChange: PropTypes.func.isRequired,\n    handleSubmitChange: PropTypes.func.isRequired,\n    errors: PropTypes.func.isRequired\n};\nexport default Signup;"]},"metadata":{},"sourceType":"module"}