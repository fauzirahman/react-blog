{"ast":null,"code":"\"use strict\";\n/**\n * @module indicative-rules\n */\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nconst alphaNumericRegex = /^[a-z0-9]+$/i;\n/**\n * Returns a boolean telling if value pass the alpha numeric test or not.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.alphaNumeric('secret123')) {\n * }\n * ```\n */\n\nexports.alphaNumeric = input => {\n  return typeof input === 'string' && alphaNumericRegex.test(input);\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/raw/alphaNumeric.js"],"names":["Object","defineProperty","exports","value","alphaNumericRegex","alphaNumeric","input","test"],"mappings":"AAAA;AACA;;;;AAGAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACA;;;;;;;;;AAQA,MAAMC,iBAAiB,GAAG,cAA1B;AACA;;;;;;;;;;;;AAWAF,OAAO,CAACG,YAAR,GAAwBC,KAAD,IAAW;AAC9B,SAAO,OAAQA,KAAR,KAAmB,QAAnB,IAA+BF,iBAAiB,CAACG,IAAlB,CAAuBD,KAAvB,CAAtC;AACH,CAFD","sourcesContent":["\"use strict\";\n/**\n * @module indicative-rules\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nconst alphaNumericRegex = /^[a-z0-9]+$/i;\n/**\n * Returns a boolean telling if value pass the alpha numeric test or not.\n *\n * @example\n * ```js\n * const { is } = require('indicative')\n *\n * if (is.alphaNumeric('secret123')) {\n * }\n * ```\n */\nexports.alphaNumeric = (input) => {\n    return typeof (input) === 'string' && alphaNumericRegex.test(input);\n};\n"]},"metadata":{},"sourceType":"script"}