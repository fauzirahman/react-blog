{"ast":null,"code":"\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar indicative_utils_1 = require(\"indicative-utils\");\n\nvar empty_1 = require(\"../../raw/empty\");\n\nvar existy_1 = require(\"../../raw/existy\");\n\nvar MISSING_VALUES = 'requiredWithoutAny:make sure to define one or more target fields';\n/**\n * Enforces the field value to exist when any of the expected fields are\n * missing.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   email: 'required_without_any:username,account_id'\n * }\n *\n * // or\n * const rules = {\n *   email: [\n *     validations.requiredWithoutAny(['username', 'account_id'])\n *   ]\n * }\n * ```\n */\n\nvar validation = {\n  async: false,\n  compile: function compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUES, 1);\n    return args.map(function (arg) {\n      return String(arg);\n    });\n  },\n  validate: function validate(data, field, args) {\n    var missingField = args.some(function (item) {\n      return !existy_1.existy(indicative_utils_1.getValue(data, item));\n    });\n\n    if (missingField) {\n      return !empty_1.empty(indicative_utils_1.getValue(data, field));\n    }\n\n    return true;\n  }\n};\nexports.default = validation;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/validations/existence/requiredWithoutAny.js"],"names":["Object","defineProperty","exports","value","indicative_utils_1","require","empty_1","existy_1","MISSING_VALUES","validation","async","compile","args","ensureLength","map","arg","String","validate","data","field","missingField","some","item","existy","getValue","empty","default"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;;AACA,IAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,IAAME,QAAQ,GAAGF,OAAO,CAAC,kBAAD,CAAxB;;AACA,IAAMG,cAAc,GAAG,kEAAvB;AACA;;;;;;;;;;;;;;;;;;;;AAmBA,IAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,KADQ;AAEfC,EAAAA,OAFe,mBAEPC,IAFO,EAED;AACVR,IAAAA,kBAAkB,CAACS,YAAnB,CAAgCD,IAAhC,EAAsCJ,cAAtC,EAAsD,CAAtD;AACA,WAAOI,IAAI,CAACE,GAAL,CAAS,UAACC,GAAD;AAAA,aAASC,MAAM,CAACD,GAAD,CAAf;AAAA,KAAT,CAAP;AACH,GALc;AAMfE,EAAAA,QAAQ,EAAE,kBAACC,IAAD,EAAOC,KAAP,EAAcP,IAAd,EAAuB;AAC7B,QAAMQ,YAAY,GAAGR,IAAI,CAACS,IAAL,CAAU,UAACC,IAAD;AAAA,aAAU,CAACf,QAAQ,CAACgB,MAAT,CAAgBnB,kBAAkB,CAACoB,QAAnB,CAA4BN,IAA5B,EAAkCI,IAAlC,CAAhB,CAAX;AAAA,KAAV,CAArB;;AACA,QAAIF,YAAJ,EAAkB;AACd,aAAO,CAACd,OAAO,CAACmB,KAAR,CAAcrB,kBAAkB,CAACoB,QAAnB,CAA4BN,IAA5B,EAAkCC,KAAlC,CAAd,CAAR;AACH;;AACD,WAAO,IAAP;AACH;AAZc,CAAnB;AAcAjB,OAAO,CAACwB,OAAR,GAAkBjB,UAAlB","sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst empty_1 = require(\"../../raw/empty\");\nconst existy_1 = require(\"../../raw/existy\");\nconst MISSING_VALUES = 'requiredWithoutAny:make sure to define one or more target fields';\n/**\n * Enforces the field value to exist when any of the expected fields are\n * missing.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   email: 'required_without_any:username,account_id'\n * }\n *\n * // or\n * const rules = {\n *   email: [\n *     validations.requiredWithoutAny(['username', 'account_id'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUES, 1);\n        return args.map((arg) => String(arg));\n    },\n    validate: (data, field, args) => {\n        const missingField = args.some((item) => !existy_1.existy(indicative_utils_1.getValue(data, item)));\n        if (missingField) {\n            return !empty_1.empty(indicative_utils_1.getValue(data, field));\n        }\n        return true;\n    },\n};\nexports.default = validation;\n"]},"metadata":{},"sourceType":"script"}