{"ast":null,"code":"\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst getBaseRules_1 = require(\"./getBaseRules\");\n/**\n * Returns runtime node for an object type.\n */\n\n\nfunction getObjectType(schema, isOptional) {\n  return {\n    getTree() {\n      return {\n        type: 'object',\n        rules: getBaseRules_1.getBaseRules('object', isOptional),\n        children: Object.keys(schema).reduce((result, key) => {\n          result[key] = schema[key].getTree();\n          return result;\n        }, {})\n      };\n    }\n\n  };\n}\n\nexports.getObjectType = getObjectType;","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-parser/build/src/utils/getObjectType.js"],"names":["Object","defineProperty","exports","value","getBaseRules_1","require","getObjectType","schema","isOptional","getTree","type","rules","getBaseRules","children","keys","reduce","result","key"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,cAAc,GAAGC,OAAO,CAAC,gBAAD,CAA9B;AACA;;;;;AAGA,SAASC,aAAT,CAAuBC,MAAvB,EAA+BC,UAA/B,EAA2C;AACvC,SAAO;AACHC,IAAAA,OAAO,GAAG;AACN,aAAO;AACHC,QAAAA,IAAI,EAAE,QADH;AAEHC,QAAAA,KAAK,EAAEP,cAAc,CAACQ,YAAf,CAA4B,QAA5B,EAAsCJ,UAAtC,CAFJ;AAGHK,QAAAA,QAAQ,EAAEb,MAAM,CAACc,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,CAA2B,CAACC,MAAD,EAASC,GAAT,KAAiB;AAClDD,UAAAA,MAAM,CAACC,GAAD,CAAN,GAAcV,MAAM,CAACU,GAAD,CAAN,CAAYR,OAAZ,EAAd;AACA,iBAAOO,MAAP;AACH,SAHS,EAGP,EAHO;AAHP,OAAP;AAQH;;AAVE,GAAP;AAYH;;AACDd,OAAO,CAACI,aAAR,GAAwBA,aAAxB","sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getBaseRules_1 = require(\"./getBaseRules\");\n/**\n * Returns runtime node for an object type.\n */\nfunction getObjectType(schema, isOptional) {\n    return {\n        getTree() {\n            return {\n                type: 'object',\n                rules: getBaseRules_1.getBaseRules('object', isOptional),\n                children: Object.keys(schema).reduce((result, key) => {\n                    result[key] = schema[key].getTree();\n                    return result;\n                }, {}),\n            };\n        },\n    };\n}\nexports.getObjectType = getObjectType;\n"]},"metadata":{},"sourceType":"script"}