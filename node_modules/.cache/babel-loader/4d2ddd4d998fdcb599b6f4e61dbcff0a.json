{"ast":null,"code":"\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst indicative_utils_1 = require(\"indicative-utils\");\n\nconst empty_1 = require(\"../../raw/empty\");\n\nconst existy_1 = require(\"../../raw/existy\");\n\nconst MISSING_VALUE = 'requiredIf:make sure to define target field';\n/**\n * Enforces the field value to exist when the target field exists. For example:\n * Ask for `address` when value for `needs_delivery` exists.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   address: 'required_if:needs_delivery'\n * }\n *\n * // or\n * const rules = {\n *   address: [\n *     validations.requiredIf(['needs_delivery'])\n *   ]\n * }\n * ```\n */\n\nconst validation = {\n  async: false,\n\n  compile(args) {\n    indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n    return [String(args[0])];\n  },\n\n  validate: (data, field, [targetField]) => {\n    if (!existy_1.existy(indicative_utils_1.getValue(data, targetField))) {\n      return true;\n    }\n\n    return !empty_1.empty(indicative_utils_1.getValue(data, field));\n  }\n};\nexports.default = validation;","map":{"version":3,"sources":["/opt/lampp/htdocs/react-blog/node_modules/indicative-rules/build/src/validations/existence/requiredIf.js"],"names":["Object","defineProperty","exports","value","indicative_utils_1","require","empty_1","existy_1","MISSING_VALUE","validation","async","compile","args","ensureLength","String","validate","data","field","targetField","existy","getValue","empty","default"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,MAAMC,kBAAkB,GAAGC,OAAO,CAAC,kBAAD,CAAlC;;AACA,MAAMC,OAAO,GAAGD,OAAO,CAAC,iBAAD,CAAvB;;AACA,MAAME,QAAQ,GAAGF,OAAO,CAAC,kBAAD,CAAxB;;AACA,MAAMG,aAAa,GAAG,6CAAtB;AACA;;;;;;;;;;;;;;;;;;;;AAmBA,MAAMC,UAAU,GAAG;AACfC,EAAAA,KAAK,EAAE,KADQ;;AAEfC,EAAAA,OAAO,CAACC,IAAD,EAAO;AACVR,IAAAA,kBAAkB,CAACS,YAAnB,CAAgCD,IAAhC,EAAsCJ,aAAtC,EAAqD,CAArD;AACA,WAAO,CAACM,MAAM,CAACF,IAAI,CAAC,CAAD,CAAL,CAAP,CAAP;AACH,GALc;;AAMfG,EAAAA,QAAQ,EAAE,CAACC,IAAD,EAAOC,KAAP,EAAc,CAACC,WAAD,CAAd,KAAgC;AACtC,QAAI,CAACX,QAAQ,CAACY,MAAT,CAAgBf,kBAAkB,CAACgB,QAAnB,CAA4BJ,IAA5B,EAAkCE,WAAlC,CAAhB,CAAL,EAAsE;AAClE,aAAO,IAAP;AACH;;AACD,WAAO,CAACZ,OAAO,CAACe,KAAR,CAAcjB,kBAAkB,CAACgB,QAAnB,CAA4BJ,IAA5B,EAAkCC,KAAlC,CAAd,CAAR;AACH;AAXc,CAAnB;AAaAf,OAAO,CAACoB,OAAR,GAAkBb,UAAlB","sourcesContent":["\"use strict\";\n/*\n* indicative-rules\n*\n* (c) Harminder Virk <virk@adonisjs.com>\n*\n* For the full copyright and license information, please view the LICENSE\n* file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst indicative_utils_1 = require(\"indicative-utils\");\nconst empty_1 = require(\"../../raw/empty\");\nconst existy_1 = require(\"../../raw/existy\");\nconst MISSING_VALUE = 'requiredIf:make sure to define target field';\n/**\n * Enforces the field value to exist when the target field exists. For example:\n * Ask for `address` when value for `needs_delivery` exists.\n *\n * ```ts\n * import { validations } from 'indicative/validator'\n *\n * const rules = {\n *   address: 'required_if:needs_delivery'\n * }\n *\n * // or\n * const rules = {\n *   address: [\n *     validations.requiredIf(['needs_delivery'])\n *   ]\n * }\n * ```\n */\nconst validation = {\n    async: false,\n    compile(args) {\n        indicative_utils_1.ensureLength(args, MISSING_VALUE, 1);\n        return [String(args[0])];\n    },\n    validate: (data, field, [targetField]) => {\n        if (!existy_1.existy(indicative_utils_1.getValue(data, targetField))) {\n            return true;\n        }\n        return !empty_1.empty(indicative_utils_1.getValue(data, field));\n    },\n};\nexports.default = validation;\n"]},"metadata":{},"sourceType":"script"}