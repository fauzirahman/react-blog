{"ast":null,"code":"\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar getObjectType_1 = require(\"../utils/getObjectType\");\n/**\n * Create an object type schema node\n */\n\n\nfunction object() {\n  return {\n    members: function members(schema) {\n      return getObjectType_1.getObjectType(schema, false);\n    }\n  };\n}\n\nexports.object = object;\n/**\n * Create an optional object type schema node\n */\n\nobject.optional = function () {\n  return {\n    members: function members(schema) {\n      return getObjectType_1.getObjectType(schema, true);\n    }\n  };\n};","map":{"version":3,"sources":["/opt/lampp/htdocs/blog-app/node_modules/indicative-parser/build/src/Types/object.js"],"names":["Object","defineProperty","exports","value","getObjectType_1","require","object","members","schema","getObjectType","optional"],"mappings":"AAAA;AACA;;;;;;;;;AAQAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;;AACA,IAAMC,eAAe,GAAGC,OAAO,CAAC,wBAAD,CAA/B;AACA;;;;;AAGA,SAASC,MAAT,GAAkB;AACd,SAAO;AACHC,IAAAA,OADG,mBACKC,MADL,EACa;AACZ,aAAOJ,eAAe,CAACK,aAAhB,CAA8BD,MAA9B,EAAsC,KAAtC,CAAP;AACH;AAHE,GAAP;AAKH;;AACDN,OAAO,CAACI,MAAR,GAAiBA,MAAjB;AACA;;;;AAGAA,MAAM,CAACI,QAAP,GAAkB,YAAM;AACpB,SAAO;AACHH,IAAAA,OADG,mBACKC,MADL,EACa;AACZ,aAAOJ,eAAe,CAACK,aAAhB,CAA8BD,MAA9B,EAAsC,IAAtC,CAAP;AACH;AAHE,GAAP;AAKH,CAND","sourcesContent":["\"use strict\";\n/*\n * indicative-parser\n *\n * (c) Harminder Virk <virk@adonisjs.com>\n *\n * For the full copyright and license information, please view the LICENSE\n * file that was distributed with this source code.\n*/\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst getObjectType_1 = require(\"../utils/getObjectType\");\n/**\n * Create an object type schema node\n */\nfunction object() {\n    return {\n        members(schema) {\n            return getObjectType_1.getObjectType(schema, false);\n        },\n    };\n}\nexports.object = object;\n/**\n * Create an optional object type schema node\n */\nobject.optional = () => {\n    return {\n        members(schema) {\n            return getObjectType_1.getObjectType(schema, true);\n        },\n    };\n};\n"]},"metadata":{},"sourceType":"script"}